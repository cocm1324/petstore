service: petstore-sample-project

frameworkVersion: '3'

plugins:
  - serverless-plugin-typescript

provider:
  name: aws
  runtime: nodejs16.x
  region: us-west-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:ConditionCheckItem
        - dynamodb:BatchWriteItem
        - dynamodb:PartiQLSelect
      Resource: arn:aws:dynamodb:us-west-1:*:*

resources:
  Resources:
    PetTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        TableName: 'pet'
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: type
            AttributeType: S
          - AttributeName: status
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: type
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          - IndexName: status-index
            KeySchema:
              - AttributeName: status
                KeyType: HASH
              - AttributeName: type
                KeyType: RANGE
            Projection:
              ProjectionType: 'ALL'
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1

functions:
  healthCheck:
    handler: src/main.healthCheck
    events:
      - httpApi: GET /
  uploadPetImage:
    handler: src/handlers/uploadPetImage.uploadPetImage
    events:
      - httpApi: POST /pet/{petId}/uploadImage
  createPet:
    handler: src/handlers/createPet.createPet
    events:
      - httpApi: POST /pet
  listPet:
    handler: src/handlers/listPet.listPet
    events:
      - httpApi: GET /pet
  getPet:
    handler: src/handlers/getPet.getPet
    events:
      - httpApi: GET /pet/{petId}
  findPetByStatus:
    handler: src/handlers/findPetByStatus.findPetByStatus
    events:
      - httpApi: GET /pet/findByStatus
  updatePet:
    handler: src/handlers/updatePet.updatePet
    events:
      - httpApi: PUT /pet/{petId}
  updatePetStatus:
    handler: src/handlers/updatePetStatus.updatePetStatus
    events:
      - httpApi: POST /pet/{petId}
  deletePet:
    handler: src/handlers/deletePet.deletePet
    events:
      - httpApi: DELETE /pet/{petId}
  createStoreOrder:
    handler: src/handlers/createStoreOrder.createStoreOrder
    events:
      - httpApi: POST /store/order
  listStoreOrder:
    handler: src/handlers/listStoreOrder.listStoreOrder
    events:
      - httpApi: GET /store/order
  getStoreOrder:
    handler: src/handlers/getStoreOrder.getStoreOrder
    events:
      - httpApi: GET /store/order/{orderId}
  deleteStoreOrder:
    handler: src/handlers/deleteStoreOrder.deleteStoreOrder
    events:
      - httpApi: DELETE /store/order/{orderId}
  getStoreInventory:
    handler: src/handlers/getStoreInventory.getStoreInventory
    events:
      - httpApi: GET /store/inventory
